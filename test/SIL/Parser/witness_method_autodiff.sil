// SWIFT_ENABLE_TENSORFLOW
// RUN: %target-sil-opt -assume-parsing-unqualified-ownership-sil %s -module-name=witness_tables | %target-sil-opt -assume-parsing-unqualified-ownership-sil -module-name=witness_tables | %FileCheck %s

import Swift

protocol Proto {
  @differentiable(reverse)
  func f(_ x: Float, _ y: Float) -> Float
}

// CHECK-LABEL: sil hidden @generic
sil hidden @generic : $@convention(thin) <T where T : Proto> (@in T) -> () {
bb0(%0 : $*T):
  // CHECK: witness_method $T, #Proto.f!1
  %2 = witness_method $T, #Proto.f!1 : <Self where Self : Proto> (Self) -> (Float, Float) -> Float : $@convention(witness_method: Proto) <τ_0_0 where τ_0_0 : Proto> (@in_guaranteed τ_0_0) -> (Float, Float) -> Float

  // CHECK: witness_method $T, #Proto.f!adfunc.jvp.MSSS
  %3 = witness_method $T, #Proto.f!adfunc.jvp.MSSS : <Self where Self : Proto> (Self) -> (Float, Float) -> (Float, (Self, Float, Float) -> Float) : $@convention(witness_method: Proto) <τ_0_0 where τ_0_0 : Proto> (Float, Float, @in_guaranteed τ_0_0) -> (Float, @owned @callee_guaranteed (@in_guaranteed τ_0_0, Float, Float) -> Float)

  // CHECK: witness_method $T, #Proto.f!adfunc.jvp.MUUS
  %4 = witness_method $T, #Proto.f!adfunc.jvp.MUUS : <Self where Self : Proto> (Self) -> (Float, Float) -> (Float, (Float) -> Float) : $@convention(witness_method: Proto) <τ_0_0 where τ_0_0 : Proto> (Float, Float, @in_guaranteed τ_0_0) -> (Float, @owned @callee_guaranteed (Float) -> Float)

  // CHECK: witness_method $T, #Proto.f!adfunc.vjp.MSSS
  %5 = witness_method $T, #Proto.f!adfunc.vjp.MSSS : <Self where Self : Proto> (Self) -> (Float, Float) -> (Float, (Float) -> (Self, Float, Float)) : $@convention(witness_method: Proto) <τ_0_0 where τ_0_0 : Proto> (Float, Float, @in_guaranteed τ_0_0) -> (Float, @owned @callee_guaranteed (Float) -> (@out τ_0_0, Float, Float))

  // CHECK: witness_method $T, #Proto.f!adfunc.vjp.MUUS
  %6 = witness_method $T, #Proto.f!adfunc.vjp.MUUS : <Self where Self : Proto> (Self) -> (Float, Float) -> (Float, (Float) -> Float) : $@convention(witness_method: Proto) <τ_0_0 where τ_0_0 : Proto> (Float, Float, @in_guaranteed τ_0_0) -> (Float, @owned @callee_guaranteed (Float) -> Float)

  %7 = tuple ()
  return %7 : $()
}
